<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

  <import resource="database/dataSource.xml"/><!-- Database Config -->
  <import resource="database/hibernate.xml"/><!-- Hibernate Config -->
  <import resource="bean/beans.xml"/><!-- Beans Declaration -->

  <!-- This makes Spring perform @PersistenceContext/@PersitenceUnit injection: -->
<!--  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>-->

  <!--    This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access.-->
  <!--    JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction.-->
  <bean id="transactionManager"
    class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="myEmf" />
  </bean>

  <!--    responsible for registering the necessary Spring components that power annotation-driven transaction management;
      such as when @Transactional methods are invoked -->
  <tx:annotation-driven transaction-manager="transactionManager" />
</beans>